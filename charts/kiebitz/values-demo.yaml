# Default values for kiebitz.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

#
# assumptions
#   common registry
#   common pullPolicy 
#   common version tag
#   
# only for testing set pullPolicy to "Always" and tag to "latest" 
image:
  registry: ghcr.io/impfen
  pullPolicy: Always
  tag: 0.8.0 
  kiebitz:
    repository: services-inoeg
  static:
    repository: apps-inoeg
  beacon:
    repository: beacon-server

certManager: true

imagePullSecrets: []
ingressconfig:
  toplevel:
    hostname: demo.impfterm.in
    route:
      storage:
        port: 11111
        path: /api/v1/storage/(.*)
        rewritetarget: /$1
        service: kiebitz-storage
      appointments:
        port: 22222
        path: /api/v1/appointments/(.*)
        rewritetarget: /$1
        service: kiebitz-appointments
      static:
        port: 80
        service: static-static
  mediator:
    hostname: mediator.demo.impfterm.in
    route:
      storage:
        port: 11111
        path: /api/v1/storage/(.*)
        rewritetarget: /$1
        service: kiebitz-storage
      appointments:
        port: 22222
        path: /api/v1/appointments/(.*)
        rewritetarget: /$1
        service: kiebitz-appointments
      static:
        port: 80
        path: /(.*)
        rewritetarget: /mediator/$1
        service: static-mediator
  provider:
    hostname: provider.demo.impfterm.in
    route:
      storage:
        port: 11111
        path: /api/v1/storage/(.*)
        rewritetarget: /$1
        service: kiebitz-storage
      appointments:
        port: 22222
        path: /api/v1/appointments/(.*)
        rewritetarget: /$1
        service: kiebitz-appointments
      static:
        port: 80
        path: /(.*)
        rewritetarget: /provider/$1
        service: static-provider
  beacon:
    hostname: beacon.demo.impfterm.in
    route:
      beacon:
        port: 80
        service: beacon-beacon

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: 
  kiebitz: {}
  static: {}
  # fsGroup: 2000

securityContext:
  kiebitz: 
    runAsNonRoot: true
  static:
    capabilities:
      drop:
      - ALL
#    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 101



# generic ingress and letsencrypt settings for all services
ingress:
  className: "nginx"
  certEmail: "impfen@inoeg.de"
  # testing certServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
  certServer: "https://acme-v02.api.letsencrypt.org/directory" # for produktion
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


config:
  #
  # name of the configMap with the settings
  #
  settings: kiebitz-dev
